package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudentProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAllPropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertStudentProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertStudentProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAllUpdatablePropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertStudentProfileUpdatableFieldsEquals(expected, actual);
        assertStudentProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileAutoGeneratedPropertiesEquals(StudentProfile expected, StudentProfile actual) {
        assertThat(actual)
            .as("Verify StudentProfile auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileUpdatableFieldsEquals(StudentProfile expected, StudentProfile actual) {
        assertThat(actual)
            .as("Verify StudentProfile relevant properties")
            .satisfies(a -> assertThat(a.getBio()).as("check bio").isEqualTo(expected.getBio()))
            .satisfies(a -> assertThat(a.getLinkedinUrl()).as("check linkedinUrl").isEqualTo(expected.getLinkedinUrl()))
            .satisfies(a -> assertThat(a.getGithubUrl()).as("check githubUrl").isEqualTo(expected.getGithubUrl()))
            .satisfies(a -> assertThat(a.getProfilePictureUrl()).as("check profilePictureUrl").isEqualTo(expected.getProfilePictureUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudentProfileUpdatableRelationshipsEquals(StudentProfile expected, StudentProfile actual) {
        // empty method
    }
}
